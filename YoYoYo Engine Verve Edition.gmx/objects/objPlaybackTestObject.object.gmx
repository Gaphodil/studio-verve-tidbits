<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This object can be deleted alongside
// rPlaybackTest without issue.
t = 0;
recording = false;
recorder = undefined;
recorded = false;
states = undefined;

msg = "Move to begin recording for 5 seconds"
    + "#or press L to load replay";

saved = false;
loaded = false;
filename = "savedTestRecording.txt"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not is_undefined(recorder))
    instance_destroy(recorder);
if (not is_undefined(states))
    ds_list_destroy(states);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// works only if positioned after input in object tree
if (not loaded) {
    if (keyboard_check_pressed(ord('L'))) {
        states = input_recording_load(filename);
        msg = "Replay loaded!"
            + "#Press C to create ghost";
        loaded = true;
    }
    else if (not recording
        and not recorded
        and (input_check(KEY.LEFT)
            or input_check(KEY.RIGHT)
            or input_check(KEY.JUMP)
            or input_check(KEY.ALIGN_LEFT)
            or input_check(KEY.ALIGN_RIGHT)
            or input_check(KEY.SUICIDE)
        ))
    {
        recording = true;
        recorder = record_for(5*room_speed);
    }
    if (recording) {
        t++;
        msg = string(t / room_speed);
    }
    if (t &gt;= 5*room_speed and not recorded) {
        with (recorder) {
            other.recorded = not active;
            other.states = saved_states;
        }
        if (recorded) {
            recording = false;
            msg = "Recorded!"
                + "#Press C to create ghost"
                + "#Press S to save replay";
        }
    }
    if (recorded
        and not saved
        and keyboard_check_pressed(ord('S')))
    {
        input_recording_save(states, filename);
        saved = true;
        msg = "Replay saved!"
            + "#Press C to create ghost";
    }
}
if (not is_undefined(states)
    and keyboard_check_pressed(ord('C'))
)
    create_ghost(
        objPlayerStart.x + 17,
        objPlayerStart.y + 23,
        states
    );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_text_outline(
    room_width div 2,
    room_height div 2,
    msg,
    c_black,
    c_white
);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
