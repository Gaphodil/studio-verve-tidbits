TL;DR: Triggers are now made differently and are much more powerful. Check sample room for examples and
objTriggerManager's Create event for a full list.

The two biggest changes to the trigger system are the removal of trigger variants of objects, instead allowing for any
object to be made triggerable, and a significant expansion of trigger effects directly inspired by RedBatNick's engine.
Locked triggers are also reintroduced as they were ommited in YoYoYo engine.

objTriggerManager is the object holding all the trigger code, and its Create code is the place to check to see all the
options available, but you shouldn't ever need to place this object. Instead, use the script scrMakeTrigger() in an
object's Creation code. You can pass the trigger id as an argument instead of specifying it later. The script returns
the id of the newly made objTriggerManager instance, meaning the intended use case would be something like:
with(scrMakeTrigger("fall"))
{
    v = 4;
}

As you can see, strings are also valid trigger ids now. You can check the sample room for several examples of triggers.

The movement actions available are:
1. Move - (h and v) or (dir and spd), bounce
2. Move to position - xto, yto, spd, movetoEase ("in"/"out"/"inout"), movetoRelative
3. Follow path - path, spd, action (built-in path_action_* constant), absolute, position (0-1)
4. Gravity - grav, gravdir.

You can only use one of these at a time (or none), however you can additionally add any of the following:
5. Play sound - sound, volume (0-1)
6. Fade in/out - fadeType ("in"/"out"), fadeTime (frames), fadeEase ("in"/"out"/"inout")
An instance being set to fade in won't have a hitbox until the fade starts, and an instance set to fade out will get
destroyed when the fade finishes.
7. Stretch - xscale, yscale, scaleTime, scaleEase ("in"/"out"/"inout")

If you assign a trigger to a moving object, it will work the same until it is triggered, when the objTriggerManager
takes control of the instance's movement, unless the trigger doesn't have a movement action set - see fading out
platforms in the sample room.

Trigger objects get used as usual, except they can now be locked by setting the key variable to a trigger id.
Locked triggers do not get activated until the trigger with the key id gets activated first.
Additionally, triggers can play sounds and destroy themselves on activation, see the objTrigger Create event.